package Vista;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Modelo.Carro;
import Modelo.Moto;
import Modelo.Vehiculo;

/**
 *
 * @author aulasingenieria
 */
public class ParqueaderoUniversitario extends javax.swing.JFrame {


    // Atributos
    ArrayList<Vehiculo> vehiculos;

    /**
     * Creates new form TecnoMecanica
     */
    public ParqueaderoUniversitario() {
        vehiculos = new ArrayList<Vehiculo>();
        initComponents();
        // Desactivar botones
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        panelTabbs = new javax.swing.JTabbedPane();
        panelAdicionar = new javax.swing.JPanel();
        lblPlaca = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        lblPuertas = new javax.swing.JLabel();
        lblCilindraje = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        txtPlaca = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtPuertas = new javax.swing.JTextField();
        txtCilindraje = new javax.swing.JTextField();
        lblVehiculo = new javax.swing.JLabel();
        cmbVehiculo = new javax.swing.JComboBox<>();
        rdbSi = new javax.swing.JRadioButton();
        lblCasco = new javax.swing.JLabel();
        rdbNo = new javax.swing.JRadioButton();
        lblModelo = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        panelConsultar = new javax.swing.JPanel();
        scrPanel = new javax.swing.JScrollPane();
        tablaVehiculos = new javax.swing.JTable();
        btnSalida = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Parqueadero Universitario");

        lblPlaca.setText("Placa:");

        lblColor.setText("Color:");

        lblPuertas.setText("Numero de puertas:");

        lblCilindraje.setText("Cilindraje:");

        btnAdicionar.setText("Adicionar Vechiculo");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblVehiculo.setText("Vehiculo: ");

        cmbVehiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Carro", "Moto" }));
        cmbVehiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbVehiculoItemStateChanged(evt);
            }
        });

        btnGroup.add(rdbSi);
        rdbSi.setText("SI");

        lblCasco.setText("Casco:");

        btnGroup.add(rdbNo);
        rdbNo.setText("NO");

        lblModelo.setText("Modelo:");

        javax.swing.GroupLayout panelAdicionarLayout = new javax.swing.GroupLayout(panelAdicionar);
        panelAdicionar.setLayout(panelAdicionarLayout);
        panelAdicionarLayout.setHorizontalGroup(
            panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCasco)
                    .addComponent(lblModelo)
                    .addComponent(lblPuertas)
                    .addComponent(lblCilindraje)
                    .addComponent(lblColor)
                    .addComponent(lblPlaca)
                    .addComponent(lblVehiculo)
                    .addComponent(btnAdicionar))
                .addGap(73, 73, 73)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdicionarLayout.createSequentialGroup()
                        .addComponent(rdbSi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbNo))
                    .addComponent(txtModelo)
                    .addComponent(txtPuertas)
                    .addComponent(txtCilindraje)
                    .addComponent(txtColor)
                    .addComponent(txtPlaca)
                    .addComponent(cmbVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAdicionarLayout.setVerticalGroup(
            panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdicionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehiculo)
                    .addComponent(cmbVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaca)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCilindraje)
                    .addComponent(txtCilindraje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPuertas)
                    .addComponent(txtPuertas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbSi)
                    .addComponent(lblCasco)
                    .addComponent(rdbNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdicionar)
                .addContainerGap())
        );

        panelTabbs.addTab("Adicionar", panelAdicionar);

        tablaVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
            }
        ));
        scrPanel.setViewportView(tablaVehiculos);

        btnSalida.setText("Salida");
        btnSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConsultarLayout = new javax.swing.GroupLayout(panelConsultar);
        panelConsultar.setLayout(panelConsultarLayout);
        panelConsultarLayout.setHorizontalGroup(
            panelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultarLayout.createSequentialGroup()
                .addComponent(scrPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalida)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelConsultarLayout.setVerticalGroup(
            panelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultarLayout.createSequentialGroup()
                .addComponent(scrPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalida)
                .addContainerGap())
        );

        panelTabbs.addTab("Consultar", panelConsultar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTabbs)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTabbs))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        
        // Validar Formulario
        // Tipo de vehiculo
        if(cmbVehiculo.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de vehiculo", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Placa
        if(txtPlaca.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe ingresar una placa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Color
        if(txtColor.getText().isEmpty() && cmbVehiculo.getSelectedIndex()==1){
            JOptionPane.showMessageDialog(this, "Debe ingresar un color", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cilindraje
        if(txtCilindraje.getText().isEmpty() && cmbVehiculo.getSelectedIndex()==2){
            JOptionPane.showMessageDialog(this, "Debe ingresar un cilindraje", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Puertas
        if(txtPuertas.getText().isEmpty() && cmbVehiculo.getSelectedIndex()==1){
            JOptionPane.showMessageDialog(this, "Debe ingresar una cantidad de puertas", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Modelo
        if(txtModelo.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe ingresar un modelo", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Casco
        if((rdbSi.isSelected() && rdbNo.isSelected()) && cmbVehiculo.getSelectedIndex()==2){
            JOptionPane.showMessageDialog(this, "Debe ingresar un casco", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Agregar vehiculo a la lista
        if(cmbVehiculo.getSelectedIndex()==1){
            Carro c = new Carro();
            c.setPlaca(txtPlaca.getText());
            c.setColor(txtColor.getText());
            c.setNumeroPuertas(Integer.parseInt(txtPuertas.getText()));
            c.setModelo(txtModelo.getText());

            // Agregar a la lista
            vehiculos.add(c);
        } else if (cmbVehiculo.getSelectedIndex()==2){
            Moto m = new Moto();
            m.setPlaca(txtPlaca.getText());
            m.setCilindraje(Integer.parseInt(txtCilindraje.getText()));
            m.setModelo(txtModelo.getText());
            m.setCasco(rdbSi.isSelected());

            // Agregar a la lista
            vehiculos.add(m);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de vehiculo", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Limpiar formulario
        limpiarCampos();

        // Actualizar tabla
        actualizarTabla();


    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalidaActionPerformed
        // Pedir la placa en un JOptionPane
        String placa = JOptionPane.showInputDialog(this, "Ingrese la placa del vehiculo");
        // Buscar el vehiculo en la lista
        Vehiculo vehiculo = null;
        for (Vehiculo v : vehiculos) {
            if (v.getPlaca().equals(placa)) {
                vehiculo = v;
                break;
            }
        }
        // Si no se encontro el vehiculo, mostrar un mensaje de error
        if (vehiculo == null) {
            JOptionPane.showMessageDialog(this, "No se encontro el vehiculo");
        } else {
            // Si se encontro el vehiculo, preguntar si esta seguro de darle salida, removerlo de la lista y actualizar la tabla
            int opcion = JOptionPane.showConfirmDialog(this, "Esta seguro de darle salida al vehiculo " + vehiculo.getPlaca() + "?", "Salida", JOptionPane.YES_NO_OPTION);
            if (opcion == JOptionPane.YES_OPTION) {
                vehiculos.remove(vehiculo);
                actualizarTabla();
            }
        }
    }//GEN-LAST:event_btnSalidaActionPerformed

    private void cmbVehiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbVehiculoItemStateChanged
        // TODO add your handling code here:
        // Activar botones
        if(cmbVehiculo.getSelectedIndex()==1){
            limpiarCampos();
            // Carro: placa, color, modelo, numero de puertas
            txtPlaca.setEnabled(true);
            txtColor.setEnabled(true);
            txtModelo.setEnabled(true);
            txtPuertas.setEnabled(true);            
            btnAdicionar.setEnabled(true);

            // False: cilindraje y casco
            txtCilindraje.setEnabled(false);
            rdbSi.setEnabled(false);
            rdbNo.setEnabled(false);


        } else if(cmbVehiculo.getSelectedIndex()==2){
            limpiarCampos();
            // Moto:  placa, modelo, cilindraje, casco
            txtPlaca.setEnabled(true);
            txtModelo.setEnabled(true);
            txtCilindraje.setEnabled(true);
            rdbSi.setEnabled(true);
            rdbNo.setEnabled(true);
            btnAdicionar.setEnabled(true);

            // False: color, numero de puertas
            txtColor.setEnabled(false);
            txtPuertas.setEnabled(false);
        } else {

            // False: placa, color, modelo, numero de puertas, cilindraje, casco
            limpiarCampos();
        }
    }//GEN-LAST:event_cmbVehiculoItemStateChanged

    // Limpiar campos
    private void limpiarCampos() {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtPlaca.setText("");
        txtColor.setText("");
        txtModelo.setText("");
        txtPuertas.setText("");
        txtCilindraje.setText("");
        rdbSi.setSelected(false);
        rdbNo.setSelected(false);

        // False: placa, color, modelo, numero de puertas, cilindraje, casco
        txtPlaca.setEnabled(false);
        txtColor.setEnabled(false);
        txtModelo.setEnabled(false);
        txtPuertas.setEnabled(false);
        txtCilindraje.setEnabled(false);
        rdbSi.setEnabled(false);
        rdbNo.setEnabled(false);
        btnAdicionar.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    // Actualizar tabla
    private void actualizarTabla(){
        // TODO
        // Limpiar tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaVehiculos.getModel();
        modelo.setRowCount(0);

        // Encabezados
        String[] encabezados = {"Placa", "Color", "Modelo", "Puertas", "Cilindraje", "Casco"};
        modelo.setColumnIdentifiers(encabezados);

        // Recorrer lista
        for(Vehiculo v: vehiculos){
            // Agregar fila
            if (v instanceof Carro){
                Carro c = (Carro) v;
                modelo.addRow(new Object[]{c.getPlaca(), c.getColor(), c.getModelo(), c.getNumeroPuertas(), " - ", " - "});
            } else if (v instanceof Moto){
                Moto m = (Moto) v;
                modelo.addRow(new Object[]{m.getPlaca(), " - ", m.getModelo(), " - ", m.getCilindraje(), m.getCasco()});
            }
        }

        // Agregar filas
        tablaVehiculos.setModel(modelo);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnSalida;
    private javax.swing.JComboBox<String> cmbVehiculo;
    private javax.swing.JLabel lblCasco;
    private javax.swing.JLabel lblCilindraje;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblPuertas;
    private javax.swing.JLabel lblVehiculo;
    private javax.swing.JPanel panelAdicionar;
    private javax.swing.JPanel panelConsultar;
    private javax.swing.JTabbedPane panelTabbs;
    private javax.swing.JRadioButton rdbNo;
    private javax.swing.JRadioButton rdbSi;
    private javax.swing.JScrollPane scrPanel;
    private javax.swing.JTable tablaVehiculos;
    private javax.swing.JTextField txtCilindraje;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPuertas;
    // End of variables declaration//GEN-END:variables
}
