/*
 * Universidad Estatal a Distancia
Estudiante:Melissa Guadamuz Fernández
Cedula:113870559
Centro Universitario San José
Grupo # 1
Tutor JOSE MANUEL SALAZAR HERRERA
Tarea#1
Primer Cuatrimestre 2022
 */
package Vista;

import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import Controlador.ControladorGUI;
import Modelo.CargaPesada;
import Modelo.CargaSuelta;
import Modelo.Exportacion;
import Utilidades.Render;

/**
 *
 * @author melig
 */
public class Exportaciones extends javax.swing.JFrame {

    // Controlador GUI
    private ControladorGUI controladorGUI;
    // Identificacion del Cliente
    private String identificacionCliente;
    // Switche de Nueva exportacion
    private boolean nuevaExportacion;
    // Cotizacion
    private Exportacion cotizacion;

    /**
     * Creates new form ExportaCR
     * @param idCliente
     * @param controladorGUI
     */
    public Exportaciones(ControladorGUI controladorGUI, String idCliente) {

        // Controlador GUI
        this.controladorGUI = controladorGUI;

        // Identificacion del Cliente
        identificacionCliente = idCliente;


        initComponents();        
        
        // Actualizar Tabla
        actualizarTabla();
        
        // Ocultar los paneles
        panelPesada.setVisible(false);        
        panelSuelta.setVisible(false);

        // Asignar controlador GUI
        this.controladorGUI = controladorGUI;
        // Asignar identificacion cliente
        this.identificacionCliente = idCliente;
        // Asignar switche de nueva exportacion
        this.nuevaExportacion = true;
        // lblClientePrincipal mostrara el id del cliente
        lblClientePrincipal.setText(idCliente);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        // buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        panelPrincipal = new javax.swing.JPanel();
        lblCliPri = new javax.swing.JLabel();
        principalTabs = new javax.swing.JTabbedPane();
        panelConsultar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblExportaciones = new javax.swing.JTable();
        panelIngresar = new javax.swing.JPanel();
        btnIngresar = new javax.swing.JButton();
        lblCot = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblFec = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblKilogramos = new javax.swing.JLabel();
        txtKilogramos = new javax.swing.JTextField();
        lblCotizacion = new javax.swing.JLabel();
        lblZona = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblRes = new javax.swing.JLabel();
        lblResultado = new javax.swing.JLabel();
        lblCli = new javax.swing.JLabel();
        lblDatCot = new javax.swing.JLabel();
        lblDatosCotizacion = new javax.swing.JLabel();
        lblCarga = new javax.swing.JLabel();
        Suelta = new javax.swing.JRadioButton();
        Pesada = new javax.swing.JRadioButton();
        panelPesada = new javax.swing.JPanel();
        lblPiesCarga = new javax.swing.JLabel();
        lblTipoServicio = new javax.swing.JLabel();
        TipoServicioSuelta = new javax.swing.JComboBox<>();
        PiesCargaSuelta = new javax.swing.JTextField();
        panelSuelta = new javax.swing.JPanel();
        lblTipoCarga = new javax.swing.JLabel();
        TipoCargaPesada = new javax.swing.JComboBox<>();
        lblTipoServicioC = new javax.swing.JLabel();
        PiesContenedorPesada = new javax.swing.JComboBox<>();
        lblPiesContenedor = new javax.swing.JLabel();
        TipoServicioPesada = new javax.swing.JComboBox<>();
        cmbZona = new javax.swing.JComboBox<>();
        lblCliente = new javax.swing.JLabel();
        lblClientePrincipal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblCliPri.setText("Cliente:");
        
        principalTabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tblExportaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblExportaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExportacionesMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(tblExportaciones);

        jScrollPane1.setViewportView(tblExportaciones);

        javax.swing.GroupLayout panelConsultarLayout = new javax.swing.GroupLayout(panelConsultar);
        panelConsultar.setLayout(panelConsultarLayout);
        panelConsultarLayout.setHorizontalGroup(
            panelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelConsultarLayout.setVerticalGroup(
            panelConsultarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConsultarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        principalTabs.addTab("Consultar", panelConsultar);

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        lblCot.setText("Id de cotización:");

        lblId.setText("Id de cotización");

        lblFec.setText("Fecha de cotización:");

        lblFecha.setText("Fecha de cotización");

        lblKilogramos.setText("Kilogramos a Exportar:");

        txtKilogramos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKilogramosActionPerformed(evt);
            }
        });

        lblCotizacion.setText("Cotizacion:");

        lblZona.setText("Zona de la Exportación (9 Zonas):");

        lblDireccion.setText("Dirección de entrega:");

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDirecionActionPerformed(evt);
            }
        });

        lblRes.setText("Resultado:");

        lblResultado.setText("Resultado");

        lblCli.setText("Datos Cliente:");

        lblDatCot.setText("Datos Cotizacion:");

        lblDatosCotizacion.setText("Cotizacion");

        lblCarga.setText("Carga:");

        buttonGroup2.add(Suelta);
        Suelta.setText("Suelta");
        Suelta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SueltaActionPerformed(evt);
            }
        });

        buttonGroup2.add(Pesada);
        Pesada.setText("Pesada");
        Pesada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesadaActionPerformed(evt);
            }
        });

        panelPesada.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblPiesCarga.setText("Pies de Carga:");

        lblTipoServicio.setText("Tipo de Servicio:");

        TipoServicioSuelta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Barco", "Avion" }));

        javax.swing.GroupLayout panelPesadaLayout = new javax.swing.GroupLayout(panelPesada);
        panelPesada.setLayout(panelPesadaLayout);
        panelPesadaLayout.setHorizontalGroup(
            panelPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesadaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TipoServicioSuelta, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelPesadaLayout.createSequentialGroup()
                        .addGroup(panelPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPiesCarga)
                            .addComponent(lblTipoServicio))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(PiesCargaSuelta))
                .addContainerGap())
        );
        panelPesadaLayout.setVerticalGroup(
            panelPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesadaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPiesCarga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PiesCargaSuelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipoServicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TipoServicioSuelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelSuelta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTipoCarga.setText("Tipo de Carga:");

        TipoCargaPesada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Contenedor Refrigerado", "Contenedor NO Refrigerado", "Carga Embalada" }));
        TipoCargaPesada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoCargaPesadaActionPerformed(evt);
            }
        });

        lblTipoServicioC.setText("Tipo de Servicio:");

        PiesContenedorPesada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "20", "40" }));

        lblPiesContenedor.setText("Pies del Contenedor:");

        TipoServicioPesada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Barco", "Avion" }));

        javax.swing.GroupLayout panelSueltaLayout = new javax.swing.GroupLayout(panelSuelta);
        panelSuelta.setLayout(panelSueltaLayout);
        panelSueltaLayout.setHorizontalGroup(
            panelSueltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSueltaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSueltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TipoCargaPesada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelSueltaLayout.createSequentialGroup()
                        .addGroup(panelSueltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipoCarga)
                            .addComponent(lblTipoServicioC)
                            .addComponent(lblPiesContenedor))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(TipoServicioPesada, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PiesContenedorPesada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelSueltaLayout.setVerticalGroup(
            panelSueltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSueltaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTipoCarga)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TipoCargaPesada, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipoServicioC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TipoServicioPesada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPiesContenedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PiesContenedorPesada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbZona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Nueva Inglaterra (Maine, Nuevo Hampshire, Vermont, Massachusetts,  Connecticut, Rhode Island)", "Atlántico Medio (Nueva York, Pensilvania, Nueva Jersey)", "Atlántico Sur (Maryland, Delaware, Virginia Occidental, Virginia, Carolina del  Norte, Carolina del Sur, Georgia, Florida)", "Centro Norte Oriental (Michigan, Wisconsin, Illinois, Indiana, Ohio)", "Pacífico (Alaska, Washington, Oregón, California, Hawái)", "Montana (Montana, Idaho, Wyoming, Colorado, Utah, Nevada, Arizona,  Nuevo México)", "Centro Sur Occidental (Arkansas, Oklahoma, Texas, Luisiana)", "Centro Norte Occidental (Minnesota, Dakota del Norte, Dakota del Sur, Iowa,  Nebraska, Misuri, Kansas)", "Centro Sur Oriental (Kentucky, Tennessee, Alabama, Misisipi)" }));

        lblCliente.setText("Cliente");

        javax.swing.GroupLayout panelIngresarLayout = new javax.swing.GroupLayout(panelIngresar);
        panelIngresar.setLayout(panelIngresarLayout);
        panelIngresarLayout.setHorizontalGroup(
            panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCot)
                                    .addComponent(lblFec)
                                    .addGroup(panelIngresarLayout.createSequentialGroup()
                                        .addComponent(lblKilogramos)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtKilogramos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelIngresarLayout.createSequentialGroup()
                                        .addComponent(lblZona)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblCotizacion)
                                    .addGroup(panelIngresarLayout.createSequentialGroup()
                                        .addGap(141, 141, 141)
                                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblFecha)))
                                    .addGroup(panelIngresarLayout.createSequentialGroup()
                                        .addComponent(lblDireccion)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblDatCot)
                                    .addComponent(lblCli)
                                    .addComponent(lblCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelIngresarLayout.createSequentialGroup()
                                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRes)
                                    .addComponent(lblResultado)
                                    .addComponent(lblDatosCotizacion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIngresarLayout.createSequentialGroup()
                                .addComponent(Pesada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Suelta))
                            .addComponent(panelSuelta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelPesada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCarga, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addComponent(btnIngresar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelIngresarLayout.setVerticalGroup(
            panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIngresarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addComponent(lblCotizacion)
                        .addGap(18, 18, 18)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCot)
                            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFec)
                            .addComponent(lblFecha))
                        .addGap(18, 18, 18)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKilogramos)
                            .addComponent(txtKilogramos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblZona)
                            .addComponent(cmbZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDireccion)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(lblCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCliente)
                        .addGap(18, 18, 18)
                        .addComponent(lblDatCot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDatosCotizacion)
                        .addGap(27, 27, 27)
                        .addComponent(lblRes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblResultado))
                    .addGroup(panelIngresarLayout.createSequentialGroup()
                        .addComponent(lblCarga)
                        .addGap(18, 18, 18)
                        .addGroup(panelIngresarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Suelta)
                            .addComponent(Pesada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelSuelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelPesada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIngresar)
                .addGap(13, 13, 13))
        );

        principalTabs.addTab("Ingresar", panelIngresar);

        lblClientePrincipal.setText("Cliente");

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCliPri)
                .addGap(18, 18, 18)
                .addComponent(lblClientePrincipal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(principalTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliPri)
                    .addComponent(lblClientePrincipal))
                .addGap(18, 18, 18)
                .addComponent(principalTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        
        

        // Validar Campos

        // txtID
        if (txtKilogramos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo Kilogramos no puede estar vacio");
            txtKilogramos.requestFocus();
            return;
        } else {
            if(!isNumeric(txtKilogramos.getText()))
            {
                JOptionPane.showMessageDialog(null, "El campo Kilogramos debe ser numerico");
                txtKilogramos.requestFocus();
                return;
            }
            else
            {
                
                if (Double.parseDouble(txtKilogramos.getText()) < 1){
                    JOptionPane.showMessageDialog(null, "El campo Kilogramos debe ser mayor a 0");
                    txtKilogramos.requestFocus();
                    return;
                }
            }
        }

        // cmbZona
        if(cmbZona.getSelectedIndex()<1){
            JOptionPane.showMessageDialog(null, "El campo Zona debe estar seleccionado.");
            return;
        }

        // txtDireccion
        if (txtDireccion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo Direccion no puede estar vacio");
            txtDireccion.requestFocus();
            return;
        } else {
            if(txtDireccion.getText().length() < 20){
                JOptionPane.showMessageDialog(null, "El campo Direccion debe tener al menos 20 caracteres");
                txtDireccion.requestFocus();
                return;
            }
        }

        // Tipo de Cotizacion, Pesada o Suelta
        if(Pesada.isSelected()){
            // Validar Carga Pesada
            CargaPesada cp = new CargaPesada(cotizacion);
            
            // Tipo de Carga            
            switch (TipoCargaPesada.getSelectedIndex()) {
                case 1:
                    cp.setTipoCarga("Contenedor Refrigerado");
                    break;
                case 2:
                    cp.setTipoCarga("Contenedor no refrigerado");
                    break;
                case 3:
                    cp.setTipoCarga("Carga embalada");
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "El campo Tipo de Carga Pesada debe estar seleccionado.");
                    return;
            }

            // Tipo de servicio true: Barco, false: Avion
            switch (TipoServicioPesada.getSelectedIndex()) {
                case 1:
                    cp.setTipoServicio(true);
                    break;
                case 2:
                    cp.setTipoServicio(false);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "El campo Tipo de Servicio debe estar seleccionado.");
                    return;
            }

            // Pies del contenedor
            switch (PiesContenedorPesada.getSelectedIndex()) {
                case 1:
                    cp.setPiesContenedor(true);
                    break;
                case 2:
                    cp.setPiesContenedor(false);
                    break;
                default:
                    if(TipoCargaPesada.getSelectedIndex()!=3){
                        JOptionPane.showMessageDialog(null, "El campo Pies del contenedor debe estar seleccionado.");
                        return;
                    }
            }
            cotizacion = cp;              
        } else if(Suelta.isSelected()){                
            // Validar Carga Suelta
            CargaSuelta cs = new CargaSuelta(cotizacion);
            // Pies de Carga
            if(PiesCargaSuelta.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "El campo Pies de Carga debe estar lleno");
                return;
            }
            else
                cs.setPiesCarga(Double.parseDouble(PiesCargaSuelta.getText()));
            
            // Tipo de servicio true: Barco, false: Avion
            switch (TipoServicioSuelta.getSelectedIndex()) {
                case 1:
                    cs.setTipoServicio(true);
                    break;
                case 2:
                    cs.setTipoServicio(false);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "El campo Tipo de Servicio debe estar seleccionado.");
                    return;
            }
            cotizacion = cs;
        }

        // Cotizacion
        cotizacion.setDireccion(txtDireccion.getText());
        cotizacion.setKg(Double.parseDouble(txtKilogramos.getText()));
        cotizacion.setZona(cmbZona.getSelectedItem().toString());
        // Agregar a la lista de cotizaciones
        controladorGUI.agregarExportacion(cotizacion);
        // Mostrar Usuario
        JOptionPane.showMessageDialog(null, "Exportacion aprobada para el Usuario: " + controladorGUI.buscarCliente(identificacionCliente).getIdentificacion() + " Nombre: " + controladorGUI.buscarCliente(identificacionCliente).getNombre());
        // Mostrar Calculo de Cotizacion
        JOptionPane.showMessageDialog(null, "Calculo de la Exportacion: " + controladorGUI.buscarExportacion(cotizacion.getId(), identificacionCliente).calcularExportacion());

        // Limpiar campos
        txtKilogramos.setText("");
        txtDireccion.setText("");
        cmbZona.setSelectedIndex(0);
        Pesada.setSelected(false);
        Suelta.setSelected(false);
        TipoCargaPesada.setSelectedIndex(0);
        TipoServicioPesada.setSelectedIndex(0);
        PiesContenedorPesada.setSelectedIndex(0);
        PiesCargaSuelta.setText("");
        TipoServicioSuelta.setSelectedIndex(0);

        // Actualizar tabla
        actualizarTabla();

        // Mostrar la pestaña de consultas
        principalTabs.setSelectedIndex(0);

        // Nueva exportacion
        nuevaExportacion = true;

    }//GEN-LAST:event_btnIngresarActionPerformed

    private void tblExportacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExportacionesMouseClicked
        // TODO add your handling code here:
        int columna = tblExportaciones.getColumnModel().getColumnIndexAtX(evt.getX());
        int fila = evt.getY() / tblExportaciones.getRowHeight();

        if(fila < tblExportaciones.getRowCount() && fila >= 0 && columna < tblExportaciones.getColumnCount() && columna >= 0){
            Object value = tblExportaciones.getValueAt(fila, columna);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                // Eliminar
                if(boton.getText().equals("Eliminar")){
                    int respuesta = JOptionPane.showConfirmDialog(null, "¿Esta seguro de eliminar el cliente?", "Eliminar Cliente", JOptionPane.YES_NO_OPTION);
                    if(respuesta == JOptionPane.YES_OPTION){
                        if(controladorGUI.eliminarExportacion(controladorGUI.listarExportaciones().get(fila).getId(),identificacionCliente)){
                            JOptionPane.showMessageDialog(null, "La Exportacion fue eliminada correctamente.", "Exportacion Eliminada", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "La Exportacion No Existe.", "Error del Sistema", JOptionPane.ERROR_MESSAGE);
                        }
                        actualizarTabla();
                    }
                }
                // Detalles
                if(boton.getText().equals("Detalles")){
                    JOptionPane.showMessageDialog(null, "Detalles de la Exportacion: " + controladorGUI.listarExportaciones().get(fila).toString());
                }
            }
        }
    }//GEN-LAST:event_tblExportacionesMouseClicked

    // Actualizar la tabla
    private void actualizarTabla() {

        tblExportaciones.setDefaultRenderer(Object.class, new Render());

        // Encabezados
        String[] encabezados = {"Id Cliente", "Nombre", "Id Exportacion", "Tipo de Exportacion", "Fecha", "Costo", "Zona de Envio", "Eliminar", "Detalles"};

        // Limpiar la tabla
        DefaultTableModel modelo = (DefaultTableModel) tblExportaciones.getModel();
        modelo.setRowCount(0);

        // Agregar encabezados
        modelo.setColumnIdentifiers(encabezados);

        // Recorrer la lista de exportaciones
        for (Exportacion e : controladorGUI.listarExportaciones()){
            // Boton eliminar
            JButton btnEliminar = new javax.swing.JButton("Eliminar");
            // Boton exportaciones
            JButton btnDetalles = new javax.swing.JButton("Detalles");
            Object[] fila = {identificacionCliente, controladorGUI.buscarCliente(identificacionCliente).getNombre(), e.getId(), e.getTipoServicio(), e.getFecha(), e.calcularExportacion(), e.getZona(), btnEliminar, btnDetalles};
            modelo.addRow(fila);
        }
        tblExportaciones.setRowHeight(25);
    }

    private boolean isNumeric(String text) {
        try {
            Double.parseDouble(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private void txtKilogramosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKilogramosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKilogramosActionPerformed

    private void txtDirecionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDirecionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDirecionActionPerformed

    private void PesadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesadaActionPerformed
        // TODO add your handling code here:
        // System.out.print("Pesada");        
        panelPesada.setVisible(false);        
        panelSuelta.setVisible(true);
    }//GEN-LAST:event_PesadaActionPerformed

    private void SueltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SueltaActionPerformed
        // TODO add your handling code here:
        // System.out.print("Suelta");
        panelPesada.setVisible(true);        
        panelSuelta.setVisible(false);
    }//GEN-LAST:event_SueltaActionPerformed

    private void TipoCargaPesadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoCargaPesadaActionPerformed
        // TODO add your handling code here:
        if(TipoCargaPesada.getSelectedIndex()!=3){
            TipoServicioPesada.setEnabled(false);
            TipoServicioPesada.setSelectedIndex(1);            
            PiesContenedorPesada.setEnabled(true);
        } else {            
            TipoServicioPesada.setEnabled(true);
            TipoServicioPesada.setSelectedIndex(0);
            PiesContenedorPesada.setEnabled(false);
            PiesContenedorPesada.setSelectedIndex(0);            
        }
    }//GEN-LAST:event_TipoCargaPesadaActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        if(principalTabs.getSelectedIndex()==0){
            // System.out.print("Consultas");
        } else if (nuevaExportacion){
            nuevaExportacion = false;
            // System.out.print("Ingresos");

            // Crear nueva exportacion
            cotizacion = new Exportacion();

            // Agregarle el identificador del cliente
            cotizacion.setIdCliente(identificacionCliente);

            // lblID de la nueva cotizacion
            lblId.setText(cotizacion.getId()+"");

            // lblFecha de la nueva cotizacion
            lblFecha.setText(cotizacion.getFecha());

        }
    } 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Pesada;
    private javax.swing.JTextField PiesCargaSuelta;
    private javax.swing.JComboBox<String> PiesContenedorPesada;
    private javax.swing.JRadioButton Suelta;
    private javax.swing.JComboBox<String> TipoCargaPesada;
    private javax.swing.JComboBox<String> TipoServicioPesada;
    private javax.swing.JComboBox<String> TipoServicioSuelta;
    private javax.swing.JButton btnIngresar;
    // private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cmbZona;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane principalTabs;
    private javax.swing.JTable tblExportaciones;
    private javax.swing.JLabel lblCarga;
    private javax.swing.JLabel lblCli;
    private javax.swing.JLabel lblCliPri;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblClientePrincipal;
    private javax.swing.JLabel lblCot;
    private javax.swing.JLabel lblCotizacion;
    private javax.swing.JLabel lblDatCot;
    private javax.swing.JLabel lblDatosCotizacion;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblFec;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblKilogramos;
    private javax.swing.JLabel lblPiesCarga;
    private javax.swing.JLabel lblPiesContenedor;
    private javax.swing.JLabel lblRes;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JLabel lblTipoCarga;
    private javax.swing.JLabel lblTipoServicio;
    private javax.swing.JLabel lblTipoServicioC;
    private javax.swing.JLabel lblZona;
    private javax.swing.JPanel panelConsultar;
    private javax.swing.JPanel panelIngresar;
    private javax.swing.JPanel panelPesada;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelSuelta;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtKilogramos;
    // End of variables declaration//GEN-END:variables

}
